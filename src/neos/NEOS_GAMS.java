/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NEOS_GAMS.java
 *
 * Created on 05/10/2015, 20:30:16
 */
package neos;

import java.io.File;
import java.io.PrintStream;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.xmlrpc.XmlRpcException;
import org.neos.client.FileUtils;
import org.neos.client.NeosJobXml;
import org.neos.client.NeosXmlRpcClient;
import org.neos.client.ResultReceiver;

/**
 *
 * @author marcos
 */
public class NEOS_GAMS extends javax.swing.JFrame {

    public static final JFileChooser fc = new JFileChooser();
    public File file;
    private static final String HOST = "neos-server.org";
    private static final String PORT = "3332";
    HashMap<String, String>  hTipo      = new HashMap<String, String>();

    private PrintStream standardOut;

    /** Creates new form NEOS_GAMS */
    public NEOS_GAMS() {
        initComponents();
        hTipo.put("LP", "lp");
        hTipo.put("MIP", "milp");
        hTipo.put("MINLP", "minco");
        hTipo.put("GO", "go");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSelectFile = new javax.swing.JButton();
        btnSolve = new javax.swing.JButton();
        cmbSolver = new javax.swing.JComboBox();
        txtPath = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtStatus = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taOutput = new javax.swing.JTextArea();
        cmbTipo = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnSelectFile.setText("Select GAMS model");
        btnSelectFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectFileActionPerformed(evt);
            }
        });

        btnSolve.setText("Solve using NEOS");
        btnSolve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSolveActionPerformed(evt);
            }
        });

        cmbSolver.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AlphaECP (MINLP)", "BARON (MINLP - GO)", "BDMLP (LP)", "Bonmin (MINLP)", "Couenne (MINLP - GO)", "Cbc (MIP)", "CPLEX (MIP - LP - MIQP)", "DICOPT (MINLP)", "Gurobi (MIP - LP)", "KNITRO (MINLP)", "LINDOGlobal (MINLP - GO)", "MOSEK (MIP - LP)", "SBB (MINLP)", "scip (MIP - MINLP - GO)", "XpressMP (MIP - LP)" }));

        txtPath.setEditable(false);

        txtStatus.setEditable(false);

        jLabel1.setText("Status");

        taOutput.setColumns(20);
        taOutput.setEditable(false);
        taOutput.setRows(5);
        jScrollPane1.setViewportView(taOutput);

        cmbTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "LP", "MIP", "MINLP", "GO" }));

        jLabel2.setText("E-mail");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 998, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSolve, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSelectFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmbSolver, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtPath))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(52, 52, 52))
                            .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbSolver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSelectFile)
                            .addComponent(txtPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSolve)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 569, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectFileActionPerformed
        if (evt.getSource() == btnSelectFile) {
            FileFilter filter = new FileNameExtensionFilter("GAMS file", "gms");
            fc.setFileFilter(filter);
            int returnVal = fc.showOpenDialog(btnSelectFile);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                // Parse EDI file 
                file = fc.getSelectedFile();
                txtPath.setText(file.getPath());
            }
        }
    }//GEN-LAST:event_btnSelectFileActionPerformed

    private void btnSolveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSolveActionPerformed
        if (evt.getSource() == btnSolve) {
            PrintStream printStream = new PrintStream(new CustomOutputStream(taOutput));
            standardOut = System.out;
            System.setOut(printStream);
            System.setErr(printStream);

            final Progress p = new Progress();
            p.setVisible(true);
            SwingWorker worker = new SwingWorker() {

                @Override
                protected Object doInBackground() throws Exception {

                    // Inserir codigo aqui abaixo:
                    String tmp = cmbSolver.getSelectedItem().toString();
                    String[] s = tmp.split(" ");
                    String solver = s[0];
                    System.out.println("Solver: " + solver);
                    String tipo = cmbTipo.getSelectedItem().toString();
                    NeosXmlRpcClient client = new NeosXmlRpcClient(HOST, PORT);
                    NeosJobXml exJob = new NeosJobXml(hTipo.get(tipo), solver, "GAMS");
                    FileUtils fileUtils = FileUtils.getInstance(FileUtils.APPLICATION_MODE);
                    String example = fileUtils.readFile(file.getPath());
                    exJob.addParam("model", example);
                    String email = txtEmail.getText();
                    exJob.addParam("email", email);
                    Vector params = new Vector();
                    String jobString = exJob.toXMLString();
                    params.add(jobString);

                    Integer currentJob = 0;
                    String currentPassword = "";
                    String result = "";
                    try {
                        client.connect();
                        /* invoke submitJob method on server and wait for response for 5000 ms */
                        Object[] results = (Object[]) client.execute("submitJob", params, 5000);

                        Vector v = new Vector();
                        v.add(results[0]);
                        v.add(results[1]);
                        Object status = client.execute("getJobStatus", v);
                        txtStatus.setText(status.toString());

                        /* get returned values of job number and job password */
                        currentJob = (Integer) results[0];
                        currentPassword = (String) results[1];

                        /* initialize receiver and start output monitoring */
                        JobReceiver jobReceiver = new JobReceiver();
                        ResultReceiver receiver = new ResultReceiver(client, jobReceiver,
                                currentJob, currentPassword);
                        receiver.run();

                        //System.out.println(receiver.getResult());
                        if (receiver.getStatus().equalsIgnoreCase("done")) {
                            txtStatus.setText("Finished !!");
                        }
                    } catch (XmlRpcException e) {
                        System.out.println("Error while submitting job :" + e.getMessage());
                        //return;
                    }
                    /* print results to standard output */
                    return null;
                    // Fim do codigo a ser executado na thread.
                }

                @Override
                protected void done() {
                    p.setVisible(false);
                }
            };
            worker.execute(); //Nao esquecer de executar!!!!!
        }
    }//GEN-LAST:event_btnSolveActionPerformed

        /**
         * @param args the command line arguments
         */
    

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NEOS_GAMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NEOS_GAMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NEOS_GAMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NEOS_GAMS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new NEOS_GAMS().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSelectFile;
    private javax.swing.JButton btnSolve;
    private javax.swing.JComboBox cmbSolver;
    private javax.swing.JComboBox cmbTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea taOutput;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtPath;
    private javax.swing.JTextField txtStatus;
    // End of variables declaration//GEN-END:variables
}
